{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\jiang\\\\Desktop\\\\around\\\\around-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\jiang\\\\Desktop\\\\around\\\\around-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\jiang\\\\Desktop\\\\around\\\\around-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\jiang\\\\Desktop\\\\around\\\\around-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Marker,InfoWindow}from'react-google-maps';import blueMarkerUrl from\"../assets/images/blue-marker.svg\";export var AroundMarker=/*#__PURE__*/function(_React$Component){_inherits(AroundMarker,_React$Component);var _super=_createSuper(AroundMarker);function AroundMarker(){var _this;_classCallCheck(this,AroundMarker);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isOpen:false};_this.handleToggle=function(){_this.setState(function(prevState){return{isOpen:!prevState.isOpen};});};return _this;}_createClass(AroundMarker,[{key:\"render\",value:function render(){var _this$props$post=this.props.post,user=_this$props$post.user,message=_this$props$post.message,url=_this$props$post.url,location=_this$props$post.location,type=_this$props$post.type;var lat=location.lat,lon=location.lon;var isImagePost=type==='image';var customIcon=isImagePost?undefined:{url:blueMarkerUrl,scaledSize:new window.google.maps.Size(26,41)};return/*#__PURE__*/React.createElement(Marker,{position:{lat:lat,lng:lon},onMouseOver:isImagePost?this.handleToggle:undefined,onMouseOut:isImagePost?this.handleToggle:undefined,onClick:isImagePost?undefined:this.handleToggle,icon:customIcon},this.state.isOpen?/*#__PURE__*/React.createElement(InfoWindow,null,/*#__PURE__*/React.createElement(\"div\",null,isImagePost?/*#__PURE__*/React.createElement(\"img\",{src:url,alt:message,className:\"around-marker-image\"}):/*#__PURE__*/React.createElement(\"video\",{src:url,controls:true,className:\"around-marker-video\"}),/*#__PURE__*/React.createElement(\"p\",null,\"\".concat(user,\": \").concat(message)))):null);}}]);return AroundMarker;}(React.Component);","map":{"version":3,"sources":["C:/Users/jiang/Desktop/around/around-web/src/components/AroundMarker.js"],"names":["React","Marker","InfoWindow","AroundMarker","state","isOpen","handleToggle","setState","prevState","props","post","user","message","url","location","type","lat","lon","isImagePost","customIcon","undefined","blueMarkerUrl","scaledSize","window","google","maps","Size","lng","Component"],"mappings":"opBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,UAAjB,KAAmC,mBAAnC,C,4DAIA,UAAaC,CAAAA,YAAb,+VAKIC,KALJ,CAKY,CACJC,MAAM,CAAE,KADJ,CALZ,OASIC,YATJ,CASmB,UAAM,CACjB,MAAKC,QAAL,CAAc,SAACC,SAAD,QAAgB,CAAEH,MAAM,CAAE,CAACG,SAAS,CAACH,MAArB,CAAhB,EAAd,EACH,CAXL,+EAaa,sBAC0C,KAAKI,KAAL,CAAWC,IADrD,CACGC,IADH,kBACGA,IADH,CACSC,OADT,kBACSA,OADT,CACkBC,GADlB,kBACkBA,GADlB,CACuBC,QADvB,kBACuBA,QADvB,CACiCC,IADjC,kBACiCA,IADjC,IAEGC,CAAAA,GAFH,CAEgBF,QAFhB,CAEGE,GAFH,CAEQC,GAFR,CAEgBH,QAFhB,CAEQG,GAFR,CAGL,GAAMC,CAAAA,WAAW,CAAGH,IAAI,GAAK,OAA7B,CACA,GAAMI,CAAAA,UAAU,CAAGD,WAAW,CAAGE,SAAH,CAAe,CACzCP,GAAG,CAAEQ,aADoC,CAEzCC,UAAU,CAAE,GAAIC,CAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,IAAvB,CAA4B,EAA5B,CAAgC,EAAhC,CAF6B,CAA7C,CAIA,mBACI,oBAAC,MAAD,EACI,QAAQ,CAAE,CAAEV,GAAG,CAAHA,GAAF,CAAOW,GAAG,CAAEV,GAAZ,CADd,CAEI,WAAW,CAAEC,WAAW,CAAG,KAAKZ,YAAR,CAAuBc,SAFnD,CAGI,UAAU,CAAEF,WAAW,CAAG,KAAKZ,YAAR,CAAuBc,SAHlD,CAII,OAAO,CAAEF,WAAW,CAAGE,SAAH,CAAc,KAAKd,YAJ3C,CAKI,IAAI,CAAEa,UALV,EAOK,KAAKf,KAAL,CAAWC,MAAX,cACG,oBAAC,UAAD,mBACI,+BACKa,WAAW,cACN,2BAAK,GAAG,CAAEL,GAAV,CAAe,GAAG,CAAED,OAApB,CAA6B,SAAS,CAAC,qBAAvC,EADM,cAEN,6BAAO,GAAG,CAAEC,GAAZ,CAAiB,QAAQ,KAAzB,CAA0B,SAAS,CAAC,qBAApC,EAHV,cAII,uCAAOF,IAAP,cAAgBC,OAAhB,EAJJ,CADJ,CADH,CASG,IAhBR,CADJ,CAoBH,CAzCL,0BAAkCZ,KAAK,CAAC4B,SAAxC","sourcesContent":["import React from 'react';\r\nimport { Marker, InfoWindow } from 'react-google-maps';\r\nimport PropTypes from 'prop-types';\r\nimport blueMarkerUrl from '../assets/images/blue-marker.svg';\r\n\r\nexport class AroundMarker extends React.Component {\r\n    static propTypes = {\r\n        post: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        isOpen: false,\r\n    }\r\n\r\n    handleToggle = () => {\r\n        this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\r\n    }\r\n\r\n    render() {\r\n        const { user, message, url, location, type } = this.props.post;\r\n        const { lat, lon } = location;\r\n        const isImagePost = type === 'image';\r\n        const customIcon = isImagePost ? undefined : {\r\n            url: blueMarkerUrl,\r\n            scaledSize: new window.google.maps.Size(26, 41),\r\n        };\r\n        return (\r\n            <Marker\r\n                position={{ lat, lng: lon }}\r\n                onMouseOver={isImagePost ? this.handleToggle : undefined}\r\n                onMouseOut={isImagePost ? this.handleToggle : undefined}\r\n                onClick={isImagePost ? undefined: this.handleToggle}\r\n                icon={customIcon}\r\n            >\r\n                {this.state.isOpen ? (\r\n                    <InfoWindow>\r\n                        <div>\r\n                            {isImagePost\r\n                                ? <img src={url} alt={message} className=\"around-marker-image\"/>\r\n                                : <video src={url} controls className=\"around-marker-video\"/>}\r\n                            <p>{`${user}: ${message}`}</p>\r\n                        </div>\r\n                    </InfoWindow>\r\n                ) : null}\r\n            </Marker>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}